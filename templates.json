[
	{
		"name": "OCR",
		"prompt": "You are an OCR system. Your task is to extract **row-level line items** from the provided document image(s).  \nThe document may be a Purchase Order (PO), Delivery Order (DO), Sales Order (SO), or Invoice (Inv).\n\n## Output Requirements\n- Return **RAW JSON ONLY**: an array of objects.  \n- Do **not** wrap in Markdown, code fences, or add explanations.  \n\n## Fields (strict schema)\n- \"stock_code\" (string, **min 3 chars, max 100 chars**)\n- \"stock_desc\" (string, **max 100 chars**)  \n  - If `\"stock_code\"` is missing, you must still fill `\"stock_desc\"`.\n- \"remark\" (string, **max 200 chars**)  \n  - Only include remark if `\"stock_desc\"` is not empty.\n- \"quantity\" (number, can be 0)\n- \"unit_price\" (number, can be 0)\n\n## Rules\n1. If a field is missing or looks like placeholder/noise (e.g., `-----`, `xxxxxx`), use empty string `\"\"` for text and `null` for numbers.\n2. Normalize numbers:\n   - Remove thousand separators (`,` or `.` depending on locale).\n   - Use dot (`.`) as decimal separator.\n3. Always include `\"stock_desc\"` before adding `\"remark\"`.  \n   A row cannot consist of remark only.  \n4. Enforce character limits: truncate if longer than the allowed max.\n5. Preserve the row order from the document.\n6. Only include the listed fields — no extras.\n\n## Example\nInput (Invoice snippet):\n```\n\nCode    Description     Qty    Unit Price   Remark\nB2001   Red Paint       10     12.50        urgent\nBlue Paint      5      11.00\n\n```\n\nOutput:\n[\n  {\n    \"stock_code\": \"B2001\",\n    \"stock_desc\": \"Red Paint\",\n    \"remark\": \"urgent\",\n    \"quantity\": 10,\n    \"unit_price\": 12.50\n  },\n  {\n    \"stock_code\": \"\",\n    \"stock_desc\": \"Blue Paint\",\n    \"remark\": \"\",\n    \"quantity\": 5,\n    \"unit_price\": 11.00\n  }\n]\n```"
	},
	{
		"name": "OCR2",
		"prompt": "You are an OCR parser. Extract **row-level line items** from the provided document image(s). The document may be a PO/DO/SO/Invoice.\n\n## FINAL OUTPUT\nReturn **RAW JSON ONLY**: an array of objects. **No Markdown, no code fences, no explanations.** If no valid rows, return `[]`.\n\n## SCHEMA (strict)\nEach object has exactly these keys in this order:\n- \"stock_code\": string (min 3, max 100)\n- \"stock_desc\": string (required, max 100)\n- \"remark\": string (optional, only if stock_desc not empty, max 200)\n- \"quantity\": number (required, can be 0; null only if truly unreadable)\n- \"unit_price\": number (required, can be 0; null only if truly unreadable)\n\n## ROW IDENTIFICATION\n- Use header cues like **ITEM / DESCRIPTION / QTY / UNIT PRICE / AMOUNT** (or close variants).\n- Treat each numbered line beneath the header as one row.\n- Ignore BARCODE/AMOUNT for the schema.\n\n## NORMALIZATION\n- Numbers: remove thousand separators, use `.` as the decimal point.\n- Trim all strings.\n\n## ANTI-NOISE (hard rules)\n- The following are **noise**; replace with \"\" at field level:\n  - Any run of the **same character** of length **≥ 4** (regex hint: `(.)\\1{3,}`), e.g., `zzzzzz`, `-----`, `xxxxx`, `====`.\n  - Boilerplate sentences such as \"This purchase order …\" (any language/translation).\n  - Lines that are mostly punctuation/symbols or obvious filler words like `heading`, `lorem`, `test`, `asdf`.\n- After cleaning:\n  - If **stock_desc** is empty → **discard the row** (do not output it).\n  - If **stock_code** is noise or < 3 chars → set \"stock_code\": \"\".\n\n## FIELD RULES\n1) **stock_desc is required**; provide it even when stock_code is missing.\n2) Only include **remark** if stock_desc is non-empty; keep product-specific notes (no boilerplate).\n3) Enforce max lengths via **hard truncation** (UTF-8 safe).\n4) Use `null` only for unreadable numbers (0 is a valid number).\n\n## SELF-CHECK (must be true before emitting)\n- Output is valid JSON (no comments/trailing commas).\n- Every object has **non-empty stock_desc**, and numeric `quantity`/`unit_price` (or `null` if unreadable).\n- **No string contains a same-character run ≥ 4** after cleaning.\n- Keys are exactly the five listed; no extras.\n\n## IMPORTANT\n- Do not copy or invent examples. Use only the provided image content.\n"
	},
	{
		"name": "用5个1怎么计算得到6?",
		"prompt": "用5个1怎么计算得到6? \ngive me final answer only."
	},
	{
		"name": "Translate to Spanish (Text)",
		"prompt": "Translate the following English text to Spanish:\n\n\"Hello, how are you?\""
	},
	{
		"name": "Summarize Text (Paragraph)",
		"prompt": "Summarize the following text in a single paragraph:\n\n\"The sun is a star at the center of the Solar System. It is a nearly perfect sphere of hot plasma, heated to incandescence by nuclear fusion reactions in its core, radiating the energy mainly as visible light and infrared radiation. It is by far the most important source of energy for life on Earth.\""
	},
	{
		"name": "Code Generation (Python)",
		"prompt": "Write a Python function that takes a list of numbers and returns the sum of all even numbers in the list."
	}
]